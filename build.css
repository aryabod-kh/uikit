/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
	box-sizing: border-box;
	/* 1 */
	border-width: 0;
	/* 2 */
	border-style: solid;
	/* 2 */
	border-color: #e5e7eb;
	/* 2 */
}

::before,
::after {
	--tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
	line-height: 1.5;
	/* 1 */
	-webkit-text-size-adjust: 100%;
	/* 2 */
	-moz-tab-size: 4;
	/* 3 */
	-o-tab-size: 4;
	tab-size: 4;
	/* 3 */
	font-family: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
		'Segoe UI Symbol', 'Noto Color Emoji';
	/* 4 */
	font-feature-settings: normal;
	/* 5 */
	font-variation-settings: normal;
	/* 6 */
	-webkit-tap-highlight-color: transparent;
	/* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
	margin: 0;
	/* 1 */
	line-height: inherit;
	/* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
	height: 0;
	/* 1 */
	color: inherit;
	/* 2 */
	border-top-width: 1px;
	/* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
	-webkit-text-decoration: underline dotted;
	text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
	font-size: inherit;
	font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
	color: inherit;
	text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
	font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
	font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',
		'Courier New', monospace;
	/* 1 */
	font-feature-settings: normal;
	/* 2 */
	font-variation-settings: normal;
	/* 3 */
	font-size: 1em;
	/* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
	font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
	text-indent: 0;
	/* 1 */
	border-color: inherit;
	/* 2 */
	border-collapse: collapse;
	/* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
	font-family: inherit;
	/* 1 */
	font-feature-settings: inherit;
	/* 1 */
	font-variation-settings: inherit;
	/* 1 */
	font-size: 100%;
	/* 1 */
	font-weight: inherit;
	/* 1 */
	line-height: inherit;
	/* 1 */
	color: inherit;
	/* 1 */
	margin: 0;
	/* 2 */
	padding: 0;
	/* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
	text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button;
	/* 1 */
	background-color: transparent;
	/* 2 */
	background-image: none;
	/* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
	outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
	box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
	vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
	-webkit-appearance: textfield;
	/* 1 */
	outline-offset: -2px;
	/* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
	-webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
	-webkit-appearance: button;
	/* 1 */
	font: inherit;
	/* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
	display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
	margin: 0;
}

fieldset {
	margin: 0;
	padding: 0;
}

legend {
	padding: 0;
}

ol,
ul,
menu {
	list-style: none;
	margin: 0;
	padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
	padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
	resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder,
textarea::-moz-placeholder {
	opacity: 1;
	/* 1 */
	color: #9ca3af;
	/* 2 */
}

input::placeholder,
textarea::placeholder {
	opacity: 1;
	/* 1 */
	color: #9ca3af;
	/* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role='button'] {
	cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
	cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
	display: block;
	/* 1 */
	vertical-align: middle;
	/* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
	max-width: 100%;
	height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
	display: none;
}

:root,
[data-theme] {
	background-color: var(--fallback-b1, oklch(var(--b1) / 1));
	color: var(--fallback-bc, oklch(var(--bc) / 1));
}

@supports not (color: oklch(0 0 0)) {
	:root {
		color-scheme: light;
		--fallback-p: #491eff;
		--fallback-pc: #d4dbff;
		--fallback-s: #ff41c7;
		--fallback-sc: #fff9fc;
		--fallback-a: #00cfbd;
		--fallback-ac: #00100d;
		--fallback-n: #2b3440;
		--fallback-nc: #d7dde4;
		--fallback-b1: #ffffff;
		--fallback-b2: #e5e6e6;
		--fallback-b3: #e5e6e6;
		--fallback-bc: #1f2937;
		--fallback-in: #00b3f0;
		--fallback-inc: #000000;
		--fallback-su: #00ca92;
		--fallback-suc: #000000;
		--fallback-wa: #ffc22d;
		--fallback-wac: #000000;
		--fallback-er: #ff6f70;
		--fallback-erc: #000000;
	}

	@media (prefers-color-scheme: dark) {
		:root {
			color-scheme: dark;
			--fallback-p: #7582ff;
			--fallback-pc: #050617;
			--fallback-s: #ff71cf;
			--fallback-sc: #190211;
			--fallback-a: #00c7b5;
			--fallback-ac: #000e0c;
			--fallback-n: #2a323c;
			--fallback-nc: #a6adbb;
			--fallback-b1: #1d232a;
			--fallback-b2: #191e24;
			--fallback-b3: #15191e;
			--fallback-bc: #a6adbb;
			--fallback-in: #00b3f0;
			--fallback-inc: #000000;
			--fallback-su: #00ca92;
			--fallback-suc: #000000;
			--fallback-wa: #ffc22d;
			--fallback-wac: #000000;
			--fallback-er: #ff6f70;
			--fallback-erc: #000000;
		}
	}
}

html {
	-webkit-tap-highlight-color: transparent;
}

:root {
	color-scheme: light;
	--in: 0.7206 0.191 231.6;
	--su: 64.8% 0.15 160;
	--wa: 0.8471 0.199 83.87;
	--er: 0.7176 0.221 22.18;
	--pc: 0.89824 0.06192 275.75;
	--ac: 0.15352 0.0368 183.61;
	--inc: 0 0 0;
	--suc: 0 0 0;
	--wac: 0 0 0;
	--erc: 0 0 0;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 0.4912 0.3096 275.75;
	--s: 0.6971 0.329 342.55;
	--sc: 0.9871 0.0106 342.55;
	--a: 0.7676 0.184 183.61;
	--n: 0.321785 0.02476 255.701624;
	--nc: 0.894994 0.011585 252.096176;
	--b1: 1 0 0;
	--b2: 0.961151 0 0;
	--b3: 0.924169 0.00108 197.137559;
	--bc: 0.278078 0.029596 256.847952;
}

[data-theme='light'] {
	color-scheme: light;
	--in: 0.7206 0.191 231.6;
	--su: 64.8% 0.15 160;
	--wa: 0.8471 0.199 83.87;
	--er: 0.7176 0.221 22.18;
	--pc: 0.89824 0.06192 275.75;
	--ac: 0.15352 0.0368 183.61;
	--inc: 0 0 0;
	--suc: 0 0 0;
	--wac: 0 0 0;
	--erc: 0 0 0;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 0.4912 0.3096 275.75;
	--s: 0.6971 0.329 342.55;
	--sc: 0.9871 0.0106 342.55;
	--a: 0.7676 0.184 183.61;
	--n: 0.321785 0.02476 255.701624;
	--nc: 0.894994 0.011585 252.096176;
	--b1: 1 0 0;
	--b2: 0.961151 0 0;
	--b3: 0.924169 0.00108 197.137559;
	--bc: 0.278078 0.029596 256.847952;
}

[data-theme='luxury'] {
	color-scheme: dark;
	--pc: 0.2 0 0;
	--sc: 0.855163 0.012821 261.069149;
	--ac: 0.873349 0.010348 338.82597;
	--inc: 0.158122 0.024356 237.133883;
	--suc: 0.156239 0.038579 132.154381;
	--wac: 0.172255 0.027305 102.89115;
	--erc: 0.143506 0.035271 22.568916;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 1 0 0;
	--s: 0.275815 0.064106 261.069149;
	--a: 0.366744 0.051741 338.82597;
	--n: 0.2427 0.057015 59.825019;
	--nc: 0.932033 0.089631 90.861683;
	--b1: 0.140765 0.004386 285.822869;
	--b2: 0.202191 0.004211 308.22937;
	--b3: 0.298961 0.003818 308.318612;
	--bc: 0.756879 0.123666 76.890484;
	--in: 0.790612 0.121778 237.133883;
	--su: 0.781197 0.192894 132.154381;
	--wa: 0.861274 0.136524 102.89115;
	--er: 0.717531 0.176357 22.568916;
}

[data-theme='aqua'] {
	color-scheme: dark;
	--b2: 0.453464 0.118611 261.181672;
	--b3: 0.419333 0.109683 261.181672;
	--bc: 0.897519 0.025508 261.181672;
	--sc: 0.121365 0.02175 309.782946;
	--ac: 0.186854 0.020445 94.555431;
	--nc: 0.122124 0.023402 243.760661;
	--inc: 0.90923 0.043042 262.880917;
	--suc: 0.12541 0.033982 149.213788;
	--wac: 0.133168 0.031484 58.31834;
	--erc: 0.1479 0.038 27.33;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 0.856617 0.14498 198.6458;
	--pc: 0.401249 0.068266 197.603872;
	--s: 0.606827 0.108752 309.782946;
	--a: 0.934269 0.102225 94.555431;
	--n: 0.610622 0.117009 243.760661;
	--b1: 0.487596 0.127539 261.181672;
	--in: 0.54615 0.215208 262.880917;
	--su: 0.627052 0.169912 149.213788;
	--wa: 0.66584 0.157422 58.31834;
	--er: 0.7395 0.19 27.33;
}

[data-theme='synthwave'] {
	color-scheme: dark;
	--b2: 0.202941 0.076211 287.835609;
	--b3: 0.187665 0.070475 287.835609;
	--pc: 0.144421 0.031903 342.009383;
	--sc: 0.156543 0.02362 227.382405;
	--ac: 0.17608 0.0412 93.72;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 0.722105 0.159514 342.009383;
	--s: 0.782714 0.118101 227.382405;
	--a: 0.8804 0.206 93.72;
	--n: 0.255554 0.103537 286.507967;
	--nc: 0.979365 0.00819 301.358346;
	--b1: 0.218216 0.081948 287.835609;
	--bc: 0.979365 0.00819 301.358346;
	--in: 0.765197 0.12273 231.831603;
	--inc: 0.235017 0.096418 290.329844;
	--su: 0.860572 0.115038 178.624677;
	--suc: 0.235017 0.096418 290.329844;
	--wa: 0.85531 0.122117 93.722227;
	--wac: 0.235017 0.096418 290.329844;
	--er: 0.737005 0.121339 32.639257;
	--erc: 0.235017 0.096418 290.329844;
}

*,
::before,
::after {
	--tw-border-spacing-x: 0;
	--tw-border-spacing-y: 0;
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x:  ;
	--tw-pan-y:  ;
	--tw-pinch-zoom:  ;
	--tw-scroll-snap-strictness: proximity;
	--tw-gradient-from-position:  ;
	--tw-gradient-via-position:  ;
	--tw-gradient-to-position:  ;
	--tw-ordinal:  ;
	--tw-slashed-zero:  ;
	--tw-numeric-figure:  ;
	--tw-numeric-spacing:  ;
	--tw-numeric-fraction:  ;
	--tw-ring-inset:  ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgb(59 130 246 / 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur:  ;
	--tw-brightness:  ;
	--tw-contrast:  ;
	--tw-grayscale:  ;
	--tw-hue-rotate:  ;
	--tw-invert:  ;
	--tw-saturate:  ;
	--tw-sepia:  ;
	--tw-drop-shadow:  ;
	--tw-backdrop-blur:  ;
	--tw-backdrop-brightness:  ;
	--tw-backdrop-contrast:  ;
	--tw-backdrop-grayscale:  ;
	--tw-backdrop-hue-rotate:  ;
	--tw-backdrop-invert:  ;
	--tw-backdrop-opacity:  ;
	--tw-backdrop-saturate:  ;
	--tw-backdrop-sepia:  ;
}

::backdrop {
	--tw-border-spacing-x: 0;
	--tw-border-spacing-y: 0;
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x:  ;
	--tw-pan-y:  ;
	--tw-pinch-zoom:  ;
	--tw-scroll-snap-strictness: proximity;
	--tw-gradient-from-position:  ;
	--tw-gradient-via-position:  ;
	--tw-gradient-to-position:  ;
	--tw-ordinal:  ;
	--tw-slashed-zero:  ;
	--tw-numeric-figure:  ;
	--tw-numeric-spacing:  ;
	--tw-numeric-fraction:  ;
	--tw-ring-inset:  ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgb(59 130 246 / 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur:  ;
	--tw-brightness:  ;
	--tw-contrast:  ;
	--tw-grayscale:  ;
	--tw-hue-rotate:  ;
	--tw-invert:  ;
	--tw-saturate:  ;
	--tw-sepia:  ;
	--tw-drop-shadow:  ;
	--tw-backdrop-blur:  ;
	--tw-backdrop-brightness:  ;
	--tw-backdrop-contrast:  ;
	--tw-backdrop-grayscale:  ;
	--tw-backdrop-hue-rotate:  ;
	--tw-backdrop-invert:  ;
	--tw-backdrop-opacity:  ;
	--tw-backdrop-saturate:  ;
	--tw-backdrop-sepia:  ;
}

.tw-ui-btn {
	display: inline-flex;
	height: 3rem;
	min-height: 3rem;
	flex-shrink: 0;
	cursor: pointer;
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	border-radius: var(--rounded-btn, 0.5rem);
	border-color: transparent;
	border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
	padding-left: 1rem;
	padding-right: 1rem;
	text-align: center;
	font-size: 0.875rem;
	line-height: 1em;
	gap: 0.5rem;
	font-weight: 600;
	text-decoration-line: none;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	border-width: var(--border-btn, 1px);
	animation: button-pop var(--animation-btn, 0.25s) ease-out;
	transition-property: color, background-color, border-color, opacity, box-shadow, transform;
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
	--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
		var(--tw-shadow);
	outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
	background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
	--tw-bg-opacity: 1;
	--tw-border-opacity: 1;
}

.tw-ui-btn-disabled,
.tw-ui-btn[disabled],
.tw-ui-btn:disabled {
	pointer-events: none;
}

:where(.tw-ui-btn:is(input[type='checkbox'])),
:where(.tw-ui-btn:is(input[type='radio'])) {
	width: auto;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}

.tw-ui-btn:is(input[type='checkbox']):after,
.tw-ui-btn:is(input[type='radio']):after {
	--tw-content: attr(aria-label);
	content: var(--tw-content);
}

@media (hover: hover) {
	.tw-ui-btn:hover {
		--tw-border-opacity: 1;
		border-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-border-opacity)));
		--tw-bg-opacity: 1;
		background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
	}

	@supports (color: color-mix(in oklab, black, black)) {
		.tw-ui-btn:hover {
			background-color: color-mix(
				in oklab,
				oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
				black
			);
			border-color: color-mix(
				in oklab,
				oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
				black
			);
		}
	}

	@supports not (color: oklch(0 0 0)) {
		.tw-ui-btn:hover {
			background-color: var(--btn-color, var(--fallback-b2));
			border-color: var(--btn-color, var(--fallback-b2));
		}
	}

	.tw-ui-btn:hover {
		--tw-border-opacity: 1;
		border-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-border-opacity)));
		--tw-bg-opacity: 1;
		background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
	}

	@supports (color: color-mix(in oklab, black, black)) {
		.tw-ui-btn:hover {
			background-color: color-mix(
				in oklab,
				oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
				black
			);
			border-color: color-mix(
				in oklab,
				oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
				black
			);
		}
	}

	@supports not (color: oklch(0 0 0)) {
		.tw-ui-btn:hover {
			background-color: var(--btn-color, var(--fallback-b2));
			border-color: var(--btn-color, var(--fallback-b2));
		}
	}

	.tw-ui-btn:hover {
		--tw-border-opacity: 1;
		border-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-border-opacity)));
		--tw-bg-opacity: 1;
		background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
	}

	@supports (color: color-mix(in oklab, black, black)) {
		.tw-ui-btn:hover {
			background-color: color-mix(
				in oklab,
				oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
				black
			);
			border-color: color-mix(
				in oklab,
				oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
				black
			);
		}
	}

	@supports not (color: oklch(0 0 0)) {
		.tw-ui-btn:hover {
			background-color: var(--btn-color, var(--fallback-b2));
			border-color: var(--btn-color, var(--fallback-b2));
		}
	}

	.tw-ui-btn.tw-ui-glass:hover {
		--glass-opacity: 25%;
		--glass-border-opacity: 15%;
	}

	.tw-ui-btn-outline.tw-ui-btn-primary:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
	}

	@supports (color: color-mix(in oklab, black, black)) {
		.tw-ui-btn-outline.tw-ui-btn-primary:hover {
			background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, black);
			border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, black);
		}
	}

	.tw-ui-btn-outline.tw-ui-btn-primary:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
	}

	@supports (color: color-mix(in oklab, black, black)) {
		.tw-ui-btn-outline.tw-ui-btn-primary:hover {
			background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, black);
			border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, black);
		}
	}

	.tw-ui-btn-disabled:hover,
	.tw-ui-btn[disabled]:hover,
	.tw-ui-btn:disabled:hover {
		--tw-border-opacity: 0;
		background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
		--tw-bg-opacity: 0.2;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
		--tw-text-opacity: 0.2;
	}

	@supports (color: color-mix(in oklab, black, black)) {
		.tw-ui-btn:is(input[type='checkbox']:checked):hover,
		.tw-ui-btn:is(input[type='radio']:checked):hover {
			background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, black);
			border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, black);
		}
	}
}

.tw-ui-toggle {
	flex-shrink: 0;
	--tglbg: var(--fallback-b1, oklch(var(--b1) / 1));
	--handleoffset: 1.5rem;
	--handleoffsetcalculator: calc(var(--handleoffset) * -1);
	--togglehandleborder: 0 0;
	height: 1.5rem;
	width: 3rem;
	cursor: pointer;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	border-radius: var(--rounded-badge, 1.9rem);
	border-width: 1px;
	border-color: currentColor;
	background-color: currentColor;
	color: var(--fallback-bc, oklch(var(--bc) / 0.5));
	transition:
		background,
		box-shadow var(--animation-input, 0.2s) ease-out;
	box-shadow:
		var(--handleoffsetcalculator) 0 0 2px var(--tglbg) inset,
		0 0 0 2px var(--tglbg) inset,
		var(--togglehandleborder);
}

.tw-ui-btn:active:hover,
.tw-ui-btn:active:focus {
	animation: button-pop 0s ease-out;
	transform: scale(var(--btn-focus-scale, 0.97));
}

@supports not (color: oklch(0 0 0)) {
	.tw-ui-btn {
		background-color: var(--btn-color, var(--fallback-b2));
		border-color: var(--btn-color, var(--fallback-b2));
	}

	.tw-ui-btn-primary {
		--btn-color: var(--fallback-p);
	}
}

@supports (color: color-mix(in oklab, black, black)) {
	.tw-ui-btn-outline.tw-ui-btn-primary.tw-ui-btn-active {
		background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, black);
		border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, black);
	}
}

.tw-ui-btn:focus-visible {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
}

.tw-ui-btn-primary {
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
	outline-color: var(--fallback-p, oklch(var(--p) / 1));
}

@supports (color: oklch(0 0 0)) {
	.tw-ui-btn-primary {
		--btn-color: var(--p);
	}
}

.tw-ui-btn.tw-ui-glass {
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
		var(--tw-shadow);
	outline-color: currentColor;
}

.tw-ui-btn.tw-ui-glass.tw-ui-btn-active {
	--glass-opacity: 25%;
	--glass-border-opacity: 15%;
}

.tw-ui-btn-outline.tw-ui-btn-primary {
	--tw-text-opacity: 1;
	color: var(--fallback-p, oklch(var(--p) / var(--tw-text-opacity)));
}

.tw-ui-btn-outline.tw-ui-btn-primary.tw-ui-btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}

.tw-ui-btn.tw-ui-btn-disabled,
.tw-ui-btn[disabled],
.tw-ui-btn:disabled {
	--tw-border-opacity: 0;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	--tw-bg-opacity: 0.2;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-text-opacity: 0.2;
}

.tw-ui-btn:is(input[type='checkbox']:checked),
.tw-ui-btn:is(input[type='radio']:checked) {
	--tw-border-opacity: 1;
	border-color: var(--fallback-p, oklch(var(--p) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}

.tw-ui-btn:is(input[type='checkbox']:checked):focus-visible,
.tw-ui-btn:is(input[type='radio']:checked):focus-visible {
	outline-color: var(--fallback-p, oklch(var(--p) / 1));
}

@keyframes button-pop {
	0% {
		transform: scale(var(--btn-focus-scale, 0.98));
	}

	40% {
		transform: scale(1.02);
	}

	100% {
		transform: scale(1);
	}
}

@keyframes checkmark {
	0% {
		background-position-y: 5px;
	}

	50% {
		background-position-y: -2px;
	}

	100% {
		background-position-y: 0;
	}
}

@keyframes modal-pop {
	0% {
		opacity: 0;
	}
}

@keyframes progress-loading {
	50% {
		background-position-x: -115%;
	}
}

@keyframes radiomark {
	0% {
		box-shadow:
			0 0 0 12px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
			0 0 0 12px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
	}

	50% {
		box-shadow:
			0 0 0 3px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
			0 0 0 3px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
	}

	100% {
		box-shadow:
			0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
			0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
	}
}

@keyframes rating-pop {
	0% {
		transform: translateY(-0.125em);
	}

	40% {
		transform: translateY(-0.125em);
	}

	100% {
		transform: translateY(0);
	}
}

@keyframes skeleton {
	from {
		background-position: 150%;
	}

	to {
		background-position: -50%;
	}
}

@keyframes toast-pop {
	0% {
		transform: scale(0.9);
		opacity: 0;
	}

	100% {
		transform: scale(1);
		opacity: 1;
	}
}

[dir='rtl'] .tw-ui-toggle {
	--handleoffsetcalculator: calc(var(--handleoffset) * 1);
}

.tw-ui-toggle:focus-visible {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}

.tw-ui-toggle:hover {
	background-color: currentColor;
}

.tw-ui-toggle:checked,
.tw-ui-toggle[checked='true'],
.tw-ui-toggle[aria-checked='true'] {
	background-image: none;
	--handleoffsetcalculator: var(--handleoffset);
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
}

[dir='rtl'] .tw-ui-toggle:checked,
[dir='rtl'] .tw-ui-toggle[checked='true'],
[dir='rtl'] .tw-ui-toggle[aria-checked='true'] {
	--handleoffsetcalculator: calc(var(--handleoffset) * -1);
}

.tw-ui-toggle:indeterminate {
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	box-shadow:
		calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,
		calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,
		0 0 0 2px var(--tglbg) inset;
}

[dir='rtl'] .tw-ui-toggle:indeterminate {
	box-shadow:
		calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,
		calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,
		0 0 0 2px var(--tglbg) inset;
}

.tw-ui-toggle:disabled {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	background-color: transparent;
	opacity: 0.3;
	--togglehandleborder: 0 0 0 3px var(--fallback-bc, oklch(var(--bc) / 1)) inset,
		var(--handleoffsetcalculator) 0 0 3px var(--fallback-bc, oklch(var(--bc) / 1)) inset;
}
